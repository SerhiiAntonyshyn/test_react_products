{"version":3,"sources":["components/Loader/Loader.tsx","components/ProductInfo/ProductInfo.tsx","components/ProductList/ProductList.tsx","store/products.tsx","store/index.ts","store/selectors.tsx","App.tsx","api/products.ts","index.tsx"],"names":["Loader","className","ProductInfo","bsr_category","img","link","name","price","src","alt","href","ProductList","products","map","product","asin","PRODUCTS","setProducts","type","reducer","action","rootReducer","combineReducers","productsReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","getProducts","state","App","dispatch","useDispatch","useSelector","useEffect","a","fetch","then","promise","json","result","length","Root","ReactDOM","render","document","getElementById"],"mappings":"gQAEaA,G,MAAS,kBACpB,qBAAKC,UAAU,SAAf,SACE,qBAAKA,UAAU,wB,QCONC,G,YAAsC,SAAC,GAM7C,IALLC,EAKI,EALJA,aACAC,EAII,EAJJA,IACAC,EAGI,EAHJA,KACAC,EAEI,EAFJA,KACAC,EACI,EADJA,MAEA,OACE,sBAAKN,UAAU,UAAf,UACE,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,OAAf,SACGK,IAEH,sBAAKL,UAAU,WAAf,uBACaE,QAGf,qBAAKF,UAAU,gBAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEO,IAAKJ,EACLK,IAAI,qBAIV,sBAAKR,UAAU,gBAAf,UACE,oBAAGA,UAAU,QAAb,UAAsBM,EAAtB,OACA,uBACA,mBACEN,UAAU,OACVS,KAAML,EAFR,iCC/BKM,EAA0C,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACxD,OACA,qBAAKX,UAAU,WAAf,SACGW,EAASC,KAAI,SAAAC,GAAO,OACnB,cAAC,EAAD,eAAoCA,GAAlBA,EAAQC,Y,wDCT1BC,EAAW,WAEJC,EAAc,SAACL,GAAD,MAA0B,CAAEM,KAAMF,EAAUJ,aAYxDO,EAVC,WAAuC,IAAtCP,EAAqC,uDAA1B,GAAIQ,EAAsB,uCACpD,OAAQA,EAAOF,MACb,KAAKF,EACH,OAAOI,EAAOR,SAEhB,QACE,OAAOA,ICNPS,EAAcC,0BAAgB,CAClCV,SAAUW,IAiBGC,EALDC,sBACZJ,EACAK,8BAAoBC,0BAAgBC,OCpBzBC,EAAc,SAACC,GAAD,OAAsBA,EAAMlB,U,OC8BxCmB,EAxBH,WACV,IAAMC,EAAWC,cACXrB,EAAWsB,YAAYL,GAM7B,OAJAM,qBAAU,WACRH,EFCF,uCAAO,WAAMA,GAAN,eAAAI,EAAA,sEGVIC,MAAM,GAAD,OAJG,wEAKhBC,MAAK,SAAAC,GAAO,OAAIA,EAAQC,UACxBF,MAAK,SAAAG,GAAM,OAAIA,EAAO7B,YHQlB,OACCA,EADD,OAELoB,EAASf,EAAYL,IAFhB,2CAAP,yDEAG,IAGD,sBAAKX,UAAU,MAAf,UACE,qBAAKA,UAAU,aAAf,sCAGqB,IAApBW,EAAS8B,OACR,cAAC,EAAD,IAEE,qBAAKzC,UAAU,cAAf,SACE,cAAC,EAAD,CAAaW,SAAUA,UElB7B+B,EAAO,kBACX,cAAC,IAAD,CAAUnB,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,cAAC,EAAD,SAKNoB,IAASC,OAAO,cAAC,EAAD,IAAUC,SAASC,eAAe,W","file":"static/js/main.388fc389.chunk.js","sourcesContent":["import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import './ProductInfo.scss';\n\n\ntype ProductProps = {\n  bsr_category: string,\n  img: string,\n  link: string,\n  name: string,\n  price: string,\n};\n\nexport const ProductInfo: React.FC<ProductProps> = ({\n  bsr_category,\n  img,\n  link,\n  name,\n  price,\n}) => {\n  return (\n    <div className=\"product\">\n      <div className=\"main-content\">\n        <div className=\"name\">\n          {name}\n        </div>\n        <div className=\"category\">\n          Category: {bsr_category}\n        </div>\n      </div>\n      <div className=\"product-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={img}\n            alt=\"Product logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"extra-content\">\n        <p className=\"price\">{price}$</p>\n        <br />\n        <a\n          className=\"link\"\n          href={link}\n        >\n          AMAZON LINK\n          </a>\n      </div>\n    </div>\n  )\n};\n","import './ProductList.scss';\nimport { ProductInfo } from '../ProductInfo/ProductInfo';\nimport { Product } from '../../helpers/interfaces';\n\ntype ProductListProps = {\n  products: Product[];\n};\n\nexport const ProductList: React.FC<ProductListProps> = ({ products }) => {\n  return (\n  <div className=\"products\">\n    {products.map(product => (\n      <ProductInfo key={product.asin} {...product} />\n    ))}\n  </div>\n  )\n};\n","import { AnyAction } from 'redux';\nimport { Product } from '../helpers/interfaces';\n\nconst PRODUCTS = 'PRODUCTS';\n\nexport const setProducts = (products: Product[]) => ({ type: PRODUCTS, products });\n\nconst reducer = (products = [], action: AnyAction) => {\n  switch (action.type) {\n    case PRODUCTS:\n      return action.products;\n\n    default:\n      return products;\n  }\n};\n\nexport default reducer;\n","import { createStore, combineReducers, applyMiddleware, Dispatch } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport { productsFromServer } from '../api/products';\nimport productsReducer, { setProducts } from './products';\n\nconst rootReducer = combineReducers({\n  products: productsReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport const fetchProducts = () => {\n  return async(dispatch: Dispatch<any>) => {\n    const products = await productsFromServer();\n    dispatch(setProducts(products));\n  }\n}\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk)),\n);\n\nexport default store;\n","import { RootState } from \".\";\n\nexport const getProducts = (state: RootState) => state.products;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Loader } from './components/Loader/Loader';\nimport { ProductList } from './components/ProductList/ProductList';\nimport './App.scss';\nimport { fetchProducts } from './store';\nimport { getProducts } from './store/selectors';\nimport { useEffect } from 'react';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const products = useSelector(getProducts);\n\n  useEffect(() => {\n    dispatch(fetchProducts())\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">\n        Product list from Amazon\n      </div>\n      {products.length === 0 ? (\n        <Loader />\n      ) : (\n          <div className=\"App-content\">\n            <ProductList products={products} />\n          </div>\n        )}\n    </div>\n  )\n};\n\nexport default App;\n","const PRODUCTS_URL = 'https://97e6625a-5619-4329-a71a-c6c69742f089.mock.pstmn.io/products';\n\nexport const productsFromServer = () => {\n  let products;\n  products = fetch(`${PRODUCTS_URL}`)\n    .then(promise => promise.json())\n    .then(result => result.products);\n  \n  return products;\n}\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\nimport store from './store';\n\nconst Root = () => (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));"],"sourceRoot":""}